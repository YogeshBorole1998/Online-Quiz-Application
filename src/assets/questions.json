{
    "questions": [
        {
            "questionText": "Which of the following does Typescript use to specify types ?",
            "options": [
                {
                    "text": ":",
                    "correct": true
                },
                {
                    "text": ";"
                },
                {
                    "text": "!"
                },
                {
                    "text": "&"
                }
            ],
            "explanation": "TS uses a colon (:) to seprate the proerty name from the property type"
        },
        {
            "questionText": "Which of the following directives is used to start an angularJS application ?",
            "options": [
                {
                    "text": "ng-repeat"
                },
                {
                    "text": "ng-init"
                },
                {
                    "text": "ng-app",
                    "correct": true
                },
                {
                    "text": "ng-model"
                }
            ],
            "explanation": "Dependencies are injected in Angular.JS by using an “injectable factory method” or “constructor function.” As dependencies, these components can be injected with “service” and “value” components."
        },
        {
            "questionText": "Which of the following can be used as a prefix for Directive ?",
            "options": [
                {
                    "text": "data-"
                },
                {
                    "text": "ng-"
                },
                {
                    "text": "All of the mentioned",
                    "correct": true
                },
                {
                    "text": "None of the mentioned"
                }
            ],
            "explanation": "The majority of AngularJS directives begin with the prefix ng. The letter ng stands for angular. However, x- or data- can also be used as a prefix."
        },
        {
            "questionText": " Which of the following is the correct syntax for writing AngularJS expressions ?",
            "options": [
                {
                    "text": "{{expression}}",
                    "correct": true
                },
                {
                    "text": "{{expression | filter1 | filter2 | …}}"
                },
                {
                    "text": "Both of the mentioned"
                },
                {
                    "text": "None of the mentioned"
                }
            ],
            "explanation": "{{expression}}"
        },
        {
            "questionText": "Which of the following components can be injected as a dependency in AngularJS ?",
            "options": [
                {
                    "text": "factory",
                    "correct": true
                },
                {
                    "text": "service"
                },
                {
                    "text": "value"
                },
                {
                    "text": "All of the above"
                }
            ],
            "explanation": "Dependencies are injected in Angular.JS by using an “injectable factory method” or “constructor function.” As dependencies, these components can be injected with “service” and “value” components."
        },
        {
            "questionText": "What is a Model in MVC ?",
            "options": [
                {
                    "text": "the lowest level of the pattern responsible for maintaining data",
                    "correct": true
                },
                {
                    "text": "represents server-side data"
                },
                {
                    "text": "represents data stored in a database"
                },
                {
                    "text": "None of the mentioned"
                }
            ],
            "explanation": "M stands for Model in MVC, and Model is a standard C# class. The model is in charge of data and business logic. The shape of the data is represented by a model."
        },
        {
            "questionText": "Which of the following is an advantage of AngularJS ?",
            "options": [
                {
                    "text": "Code is unit-testable"
                },
                {
                    "text": "Uses dependency injection and makes use of separation of concerns"
                },
                {
                    "text": " Provides reusable components"
                },
                {
                    "text": "All of the mentioned",
                    "correct": true
                }
            ],
            "explanation": "NA"
        },
        {
            "questionText": " React.js is written in which of the following language?",
            "options": [
                {
                    "text": "JavaScript",
                    "correct": true
                },
                {
                    "text": "C"
                },
                {
                    "text": "C++"
                },
                {
                    "text": "Java"
                }
            ],
            "explanation": "React Native is built on a JavaScript based React.js framework. This is a significant benefit, given that JavaScript is such a widely used language."
        },
        {
            "questionText": "Which of the following is method is not a part of ReactDOM?",
            "options": [
                {
                    "text": "ReactDOM.hydrate()"
                },
                {
                    "text": "ReactDOM.destroy()",
                    "correct": true
                },
                {
                    "text": "ReactDOM.createPortal()"
                },
                {
                    "text": "All of the mentioned"
                }
            ],
            "explanation": "ReactDOM.destroy() method is not a part of ReactDOM. ReactDOM provides the developers with an API containing the methods such as render(), findDOMNode(), unmountComponentAtNode(), hydrate(), and createPortal()."
        }
    ]
}